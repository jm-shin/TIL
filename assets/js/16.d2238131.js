(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{290:function(v,s,_){"use strict";_.r(s);var t=_(14),e=Object(t.a)({},(function(){var v=this,s=v._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[s("h1",{attrs:{id:"redis"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#redis"}},[v._v("#")]),v._v(" Redis")]),v._v(" "),s("h2",{attrs:{id:"redis-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#redis-2"}},[v._v("#")]),v._v(" Redis?")]),v._v(" "),s("ul",[s("li",[v._v("단순한 key-value 구조")]),v._v(" "),s("li",[v._v("In-memory 데이터 저장소(RAM)")]),v._v(" "),s("li",[v._v("빠른 성능\n"),s("ul",[s("li",[v._v("평균 작업 속도 < 1ms")]),v._v(" "),s("li",[v._v("초당 수백만 건의 작업 가능")])])])]),v._v(" "),s("h2",{attrs:{id:"redis-주요-사용처"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#redis-주요-사용처"}},[v._v("#")]),v._v(" Redis 주요 사용처")]),v._v(" "),s("ul",[s("li",[v._v("캐싱")]),v._v(" "),s("li",[v._v("채팅, 메시징, 대기열")]),v._v(" "),s("li",[v._v("세션 저장")]),v._v(" "),s("li",[v._v("실시간 분석")]),v._v(" "),s("li",[v._v("미디어 스트리밍")]),v._v(" "),s("li",[v._v("지리 공간 데이터 저장")]),v._v(" "),s("li",[v._v("머신 러닝")]),v._v(" "),s("li",[v._v("게임 순위표")])]),v._v(" "),s("h2",{attrs:{id:"캐싱-전략"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#캐싱-전략"}},[v._v("#")]),v._v(" 캐싱 전략")]),v._v(" "),s("ul",[s("li",[v._v("읽기 전략\n"),s("ul",[s("li",[v._v("Look-Aside(Lazy Loading)")])])]),v._v(" "),s("li",[v._v("쓰기 전략\n"),s("ul",[s("li",[v._v("Write-Around")]),v._v(" "),s("li",[v._v("Write-Through")])])])]),v._v(" "),s("h2",{attrs:{id:"redis-데이터-타입"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#redis-데이터-타입"}},[v._v("#")]),v._v(" Redis 데이터 타입")]),v._v(" "),s("ul",[s("li",[v._v("String")]),v._v(" "),s("li",[v._v("Bitmaps")]),v._v(" "),s("li",[v._v("Lists")]),v._v(" "),s("li",[v._v("Hashes")]),v._v(" "),s("li",[v._v("Sets")]),v._v(" "),s("li",[v._v("Sorted Sets")]),v._v(" "),s("li",[v._v("HyperLogLogs")]),v._v(" "),s("li",[v._v("Streams")])]),v._v(" "),s("h2",{attrs:{id:"구현"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#구현"}},[v._v("#")]),v._v(" 구현")]),v._v(" "),s("h2",{attrs:{id:"카운팅-counting"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#카운팅-counting"}},[v._v("#")]),v._v(" 카운팅(Counting)")]),v._v(" "),s("p",[s("strong",[v._v("String")])]),v._v(" "),s("ul",[s("li",[v._v("단순 증감 연산")]),v._v(" "),s("li",[v._v("INCR/ INCRBY / INCRBYFLOAT / HINCRBY / HICRBYFLOAT / ZINCRBY")])]),v._v(" "),s("p",[s("strong",[v._v("Bits")])]),v._v(" "),s("ul",[s("li",[v._v("데이터 저장공간 절약")]),v._v(" "),s("li",[v._v("정수로 된 데이터만 카운팅 가능")])]),v._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[v._v("redis "),s("span",{pre:!0,attrs:{class:"token operator"}},[v._v(">")]),v._v(" SETBIT visitors:20220122 "),s("span",{pre:!0,attrs:{class:"token number"}},[v._v("3")]),v._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[v._v("1")]),v._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("(")]),v._v("integer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(")")]),v._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[v._v("0")]),v._v("\n\nredis "),s("span",{pre:!0,attrs:{class:"token operator"}},[v._v(">")]),v._v(" SETBIT visitors:20220122 "),s("span",{pre:!0,attrs:{class:"token number"}},[v._v("6")]),v._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[v._v("1")]),v._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("(")]),v._v("integer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(")")]),v._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[v._v("0")]),v._v("\n\nredis "),s("span",{pre:!0,attrs:{class:"token operator"}},[v._v(">")]),v._v(" BITCOUNT visitors:20220122\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("(")]),v._v("integer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(")")]),v._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[v._v("2")]),v._v("\n")])])]),s("p",[s("strong",[v._v("HyperLogLogs")])]),v._v(" "),s("ul",[s("li",[v._v("대용량 데이터를 카운팅 할 때 적절")]),v._v(" "),s("li",[v._v("set과 비슷하지만 저장되는 용량은 매우 작음")]),v._v(" "),s("li",[v._v("저장된 데이터는 다시 확인할 수 없음")]),v._v(" "),s("li",[v._v("크롤링한 데이터 갯수 카운팅 등")])]),v._v(" "),s("h2",{attrs:{id:"메시징-messaging"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#메시징-messaging"}},[v._v("#")]),v._v(" 메시징(Messaging)")]),v._v(" "),s("p",[s("strong",[v._v("Lists")])]),v._v(" "),s("ul",[s("li",[v._v("Blocking 기능을 이용해 Event Queue로 사용")]),v._v(" "),s("li",[v._v("키가 있을 때만 데이터 저장 가능 - LPUSHX / RPUSHX\n"),s("ul",[s("li",[s("strong",[v._v("이미 캐싱되어 있는 피드")]),v._v("에만 신규 트윗을 저장")]),v._v(" "),s("li",[v._v("비효율적인 데이터의 이동을 막을 수 있다.")])])])]),v._v(" "),s("p",[s("strong",[v._v("Streams")])]),v._v(" "),s("ul",[s("li",[v._v("로그를 저장하기 가장 적절한 자료구조")]),v._v(" "),s("li",[v._v("append-only")]),v._v(" "),s("li",[v._v("시간 범위로 검색/ 신규추가 데이터 수신/ 소비자별 다른 데이터 수신(소비자 그룹)")])]),v._v(" "),s("h1",{attrs:{id:"운영"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#운영"}},[v._v("#")]),v._v(" 운영")]),v._v(" "),s("h2",{attrs:{id:"redis에서-데이터를-영구저장하는-방법"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#redis에서-데이터를-영구저장하는-방법"}},[v._v("#")]),v._v(" Redis에서 데이터를 영구저장하는 방법?")]),v._v(" "),s("h3",{attrs:{id:"redis는-in-memory-데이터-스토어"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#redis는-in-memory-데이터-스토어"}},[v._v("#")]),v._v(" Redis는 In-memory 데이터 스토어")]),v._v(" "),s("ul",[s("li",[v._v("서버 재시작 시 모든 데이터 유실")]),v._v(" "),s("li",[v._v("복제 기능을 사용해도 사람의 실수 발생 시 데이터 복원 불가")]),v._v(" "),s("li",[v._v("Redis를 캐시 이외의 용도로 사용한다면 적절한 데이터 백업이 필요")])]),v._v(" "),s("h3",{attrs:{id:"redis-persistence-option"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#redis-persistence-option"}},[v._v("#")]),v._v(" Redis Persistence Option")]),v._v(" "),s("ul",[s("li",[v._v("RDB(snapshot)\n"),s("ul",[s("li",[v._v("자동: redis.conf 파일에서 SAVE 옵션")]),v._v(" "),s("li",[v._v("수동: BGSAVE 커멘드를 이용해 cli 창에서 수동으로 RDB 파일 저장\n"),s("ul",[s("li",[v._v("SAVE 커멘드는 사용 X")])])])])]),v._v(" "),s("li",[v._v("AOF(Append Only File)\n"),s("ul",[s("li",[v._v("자동: redis.conf 파일에서 auto-aof-rewrite-percentage 옵션")]),v._v(" "),s("li",[v._v("수동: BGREWRITEAOF 커멘드를 이용해 CLI 창에서 수동으로 AOF 파일 재작성")])])])]),v._v(" "),s("h2",{attrs:{id:"rdb-vs-aof-선택-기준"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#rdb-vs-aof-선택-기준"}},[v._v("#")]),v._v(" RDB vs AOF 선택 기준")]),v._v(" "),s("ul",[s("li",[v._v("백업은 필요하지만 어느 정도 데이터 손실이 발생해도 괜찮은 경우\n"),s("ul",[s("li",[v._v("RDB 단독 사용")]),v._v(" "),s("li",[v._v("redis.conf 파일에서 SAVE 옵션 적절히 사용")])])]),v._v(" "),s("li",[v._v("장애 상황 직전까지의 모든 데이터가 보장되어야 할 경우\n"),s("ul",[s("li",[v._v("AOF 사용\n"),s("ul",[s("li",[v._v("APPENDFSYNC 옵션이 everysec인 경우 최대 1초 사이의 데이터 유실 가능")])])])])]),v._v(" "),s("li",[v._v("제일 강력한 내구성 필요시")]),v._v(" "),s("li",[v._v("RDB, AOF 동시 사용")])]),v._v(" "),s("h2",{attrs:{id:"redis-아키텍처의-종류"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#redis-아키텍처의-종류"}},[v._v("#")]),v._v(" Redis 아키텍처의 종류")]),v._v(" "),s("ul",[s("li",[s("p",[v._v("Replication")]),v._v(" "),s("ul",[s("li",[v._v("단순 복제 연결")]),v._v(" "),s("li",[v._v("비동기식 복제")]),v._v(" "),s("li",[v._v("HA 기능이 없으므로 장애시 수동 복구")])])]),v._v(" "),s("li",[s("p",[v._v("Sentinel")]),v._v(" "),s("ul",[s("li",[v._v("자동 페일오버 가능한 HA 구성(High Availability)")]),v._v(" "),s("li",[v._v("Sentinel 노드가 다른 노드를 감시")]),v._v(" "),s("li",[v._v("마스터가 비정상 상태일 때 자동으로 페일오버")]),v._v(" "),s("li",[v._v("연결 정보 변경 필요 없음")]),v._v(" "),s("li",[v._v("Sentinel 노드는 항상 3대 이상의 홀수로 존재해야 함")])])]),v._v(" "),s("li",[s("p",[v._v("Cluster")]),v._v(" "),s("ul",[s("li",[v._v("스케일 아웃과 HA 구성")]),v._v(" "),s("li",[v._v("키를 여러 노드로 자동 분할 저장(샤딩)")]),v._v(" "),s("li",[v._v("모든 노드가 서로를 감시하며, 마스터가 비정상 상태일 때 자동 페일오버")]),v._v(" "),s("li",[v._v("최소 3대의 마스터 노드 필요")])])])]),v._v(" "),s("h2",{attrs:{id:"사용하지-말아야할-커멘트"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#사용하지-말아야할-커멘트"}},[v._v("#")]),v._v(" 사용하지 말아야할 커멘트")]),v._v(" "),s("h3",{attrs:{id:"주의-redis는-single-thread로-동작"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#주의-redis는-single-thread로-동작"}},[v._v("#")]),v._v(" 주의: Redis는 Single Thread로 동작")]),v._v(" "),s("ul",[s("li",[v._v("keys * -> scan으로 대체")]),v._v(" "),s("li",[v._v("Hash나 Sorted Set 등 자료구조\n"),s("ul",[s("li",[v._v("키 나누기(최대 100만개)")]),v._v(" "),s("li",[v._v("hgetall -> hscan")]),v._v(" "),s("li",[v._v("del -> unlink")])])])]),v._v(" "),s("h2",{attrs:{id:"변경하면-장애를-막을-수-있는-기본-설정값"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#변경하면-장애를-막을-수-있는-기본-설정값"}},[v._v("#")]),v._v(" 변경하면 장애를 막을 수 있는 기본 설정값")]),v._v(" "),s("p",[s("strong",[v._v("STOP-WRITES-ON-BGSAVE-ERROR = NO")])]),v._v(" "),s("ul",[s("li",[v._v("yes(default)")]),v._v(" "),s("li",[v._v("RDB 파일 저장 실패 시 redis로의 모든 write 불가능")])]),v._v(" "),s("p",[s("strong",[v._v("MAXMEMORY-POLICY = ALLKEYS-LRU")])]),v._v(" "),s("ul",[s("li",[v._v("redis를 캐시로 사용할 때 Expire Time 설정 권장")]),v._v(" "),s("li",[v._v("메모리가 가득 찼을 때 MAXMEMORY-POLICY 정책에 의해 키 관리\n"),s("ul",[s("li",[v._v("noeviction(default): 삭제 안함")]),v._v(" "),s("li",[v._v("volatile-lru")]),v._v(" "),s("li",[v._v("allkeys-lru")])])])]),v._v(" "),s("h2",{attrs:{id:"cache-stamped-현상"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#cache-stamped-현상"}},[v._v("#")]),v._v(" Cache Stamped 현상")]),v._v(" "),s("ul",[s("li",[v._v("TTL 값을 너무 작게 설정한 경우")])]),v._v(" "),s("h2",{attrs:{id:"maxmemory-값-설정"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#maxmemory-값-설정"}},[v._v("#")]),v._v(" MaxMemory 값 설정")]),v._v(" "),s("p",[s("strong",[v._v("Persistence / 복제 사용시 MaxMemory 설정 주의")])]),v._v(" "),s("ul",[s("li",[v._v("RDB 저장 & AOF rewrite 시 fork()")]),v._v(" "),s("li",[v._v("Copy-on-Write로 인해 메모리를 두배로 사용하는 경우 발생 가능")]),v._v(" "),s("li",[v._v("Persistence / 복제 사용시 MaxMemory는 실제 메모리의 절반으로 설정")])]),v._v(" "),s("h2",{attrs:{id:"memory-관리"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#memory-관리"}},[v._v("#")]),v._v(" Memory 관리")]),v._v(" "),s("p",[s("strong",[v._v("물리적으로 사용되고 있는 메모리를 모니터링")])]),v._v(" "),s("ul",[s("li",[v._v("used_memory: 논리적으로 redis가 사용하는 메모리")]),v._v(" "),s("li",[v._v("used_memory_rss: OS가 redis에 할당하기 위해 사용하는 물리적 메모리 양")]),v._v(" "),s("li",[v._v("삭제되는 키가 많으면 fragmentation 증가\n"),s("ul",[s("li",[v._v("특정 시점에 피크를 찍고 다시 삭제되는 경우")]),v._v(" "),s("li",[v._v("TTL로 인한 eviction이 많이 발생하는 경우")])])])])])}),[],!1,null,null,null);s.default=e.exports}}]);